{"version":3,"sources":["components/Divider.js"],"names":[],"mappings":";;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;IAeM,kBAVL,iCAAkB;AACjB,WAAS,YAAT;AACA,cAAY;AACV,oBAAgB,SAAhB;AACA,oBAAgB,OAAhB;AACA,oBAAgB,KAAhB;AACA,eAAW,WAAX;AACA,aAAS,MAAT;GALF;CAFD;YAUK;;;;;;;;;;;;;qMASJ,SAAS,MAAK,SAAL;;;eATL;;gCAWQ;UACF,cAAgB,KAAK,KAAL,CAAhB,YADE;;;AAGV,aAAO,qBAAQ,EAAR,EAAY,KAAK,WAAL,CAAiB,UAAjB,EAA6B;AAC9C,WAAG;AACD,qBAAc,YAAY,cAAZ,UAA+B,YAAY,cAAZ,UAA+B,YAAY,cAAZ,CAA5E;AACA,iBAAO,YAAY,OAAZ,CAAP;SAFF;OADK,CAAP,CAHU;;;;mCAWG;UACL,cAAgB,KAAK,KAAL,CAAhB,YADK;;AAEb,UAAM,cAAc,SAAS,YAAY,aAAZ,CAAT,CAAd,CAFO;;yBAGS,8BAAY,YAAY,OAAZ,CAAZ,EAHT;;UAGN,2BAHM;UAGC,yBAHD;;;AAKb,cAAO,IAAP;AACE,aAAK,GAAL;AAAU;AACR,mBAAO,cAAc,KAAd,GAAsB,GAAtB,CADC;WAAV;AADF;AAIW;AACP,mBAAO,KAAP,CADO;WAAT;AAJF,OALa;;;;6BAeN;AACP,aACE;AACE,mBAAU,oBAAV;AACA,8BAAoB,KAAK,YAAL,EAApB;AACA,eAAO,KAAK,MAAL,CAAY,CAAZ,EAHT,CADF,CADO;;;;SArCL;6BAEG,aAAa;AAClB,KAAG;AACD,cAAU,KAAV;AACA,YAAQ,QAAR;GAFF;;kBA6CW","file":"components/Divider.js","sourcesContent":["import _ from 'lodash'\nimport MJMLColumnElement from './decorators/MJMLColumnElement'\nimport React, { Component } from 'react'\nimport { widthParser } from '../helpers/mjAttribute'\n\n/**\n * Displays a customizable divider\n */\n@MJMLColumnElement({\n  tagName: 'mj-divider',\n  attributes: {\n    'border-color': '#000000',\n    'border-style': 'solid',\n    'border-width': '4px',\n    'padding': '10px 25px',\n    'width': '100%'\n  }\n})\nclass Divider extends Component {\n\n  static baseStyles = {\n    p: {\n      fontSize: '1px',\n      margin: '0 auto'\n    }\n  }\n\n  styles = this.getStyles()\n\n  getStyles() {\n    const { mjAttribute } = this.props\n\n    return _.merge({}, this.constructor.baseStyles, {\n      p: {\n        borderTop: `${mjAttribute('border-width')} ${mjAttribute('border-style')} ${mjAttribute('border-color')}`,\n        width: mjAttribute('width')\n      }\n    })\n  }\n\n  outlookWidth() {\n    const { mjAttribute } = this.props\n    const parentWidth = parseInt(mjAttribute('parentWidth'))\n    const {width, unit} = widthParser(mjAttribute('width'))\n\n    switch(unit) {\n      case '%': {\n        return parentWidth * width / 100\n      }\n      default: {\n        return width\n      }\n    }\n  }\n\n  render() {\n    return (\n      <p\n        className=\"mj-divider-outlook\"\n        data-divider-width={this.outlookWidth()}\n        style={this.styles.p} />\n    )\n  }\n\n}\n\nexport default Divider\n"],"sourceRoot":"/source/"}