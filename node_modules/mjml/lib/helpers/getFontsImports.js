'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _listFontsImports = require('../configs/listFontsImports');

var _listFontsImports2 = _interopRequireDefault(_listFontsImports);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var buildTags = function buildTags(toImport) {
  var tags = {};

  if (!toImport.length) {
    return tags;
  }

  tags.link = "\n" + toImport.map(function (url) {
    return '<link href="' + url + '" rel="stylesheet" type="text/css">';
  }).join('\n');
  tags.import = '\n<style type="text/css">\n' + toImport.map(function (url) {
    return '  @import url(' + url + ');';
  }).join('\n') + "\n" + '</style>';

  return tags;
};

exports.default = function () {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
  var importAll = options.importAll;
  var content = options.content;


  if (importAll) {
    return buildTags(_listFontsImports2.default.map(function (font) {
      return font.url;
    }));
  }

  var toImport = [];

  _listFontsImports2.default.forEach(function (font) {
    var name = font.name;
    var url = font.url;

    var regex = new RegExp('"[^"]*font-family:[^"]*' + name + '[^"]*"');

    if (content.match(regex)) {
      toImport.push(url);
    }
  });

  return buildTags(toImport);
};
//# sourceMappingURL=getFontsImports.js.map
