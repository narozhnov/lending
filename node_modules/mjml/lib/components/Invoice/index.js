'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cloneDeep2 = require('lodash/cloneDeep');

var _cloneDeep3 = _interopRequireDefault(_cloneDeep2);

var _merge2 = require('lodash/merge');

var _merge3 = _interopRequireDefault(_merge2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

var _MJMLElement = require('../decorators/MJMLElement');

var _MJMLElement2 = _interopRequireDefault(_MJMLElement);

var _Table = require('../Table');

var _Table2 = _interopRequireDefault(_Table);

var _numeral = require('numeral');

var _numeral2 = _interopRequireDefault(_numeral);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Invoice = (_dec = (0, _MJMLElement2.default)({
  tagName: 'mj-invoice',
  attributes: {
    'border': '1px solid #ecedee',
    'color': '#b9b9b9',
    'font-family': 'Roboto, Ubuntu, Helvetica, Arial, sans-serif',
    'font-size': '13px',
    'intl': 'name:Name;price:Price;quantity:Quantity',
    'line-height': '22px'
  }
}), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(Invoice, _Component);

  function Invoice(props) {
    _classCallCheck(this, Invoice);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Invoice).call(this, props));

    _this.styles = _this.getStyles();


    var format = props.mjAttribute('format');
    var currencies = format.match(/([^-\d.,])/g);

    _this.items = props.mjml.get('children').filter(function (child) {
      return child.get('tagName') === 'mj-invoice-item';
    });
    _this.format = format.replace(/([^-\d.,])/g, '$');
    _this.currency = currencies[0] || null;
    return _this;
  }

  _createClass(Invoice, [{
    key: 'getStyles',
    value: function getStyles() {
      var mjAttribute = this.props.mjAttribute;


      var styles = (0, _merge3.default)({}, this.constructor.baseStyles, {
        table: {
          color: mjAttribute('color'),
          fontFamily: mjAttribute('font-family'),
          fontSize: mjAttribute('font-size'),
          lineHeight: mjAttribute('line-height')
        },
        th: {
          fontFamily: mjAttribute('font-family'),
          fontSize: mjAttribute('font-size'),
          lineHeight: mjAttribute('line-height')
        },
        thead: {
          borderBottom: mjAttribute('border')
        },
        tfoot: {
          borderTop: mjAttribute('border')
        },
        total: {
          fontFamily: mjAttribute('font-family'),
          fontSize: mjAttribute('font-size'),
          fontWeight: 700,
          lineHeight: mjAttribute('line-height'),
          padding: '10px 20px',
          textAlign: 'right'
        }
      });

      styles.thQuantity = (0, _merge3.default)({}, styles.th, { textAlign: 'right' });

      return styles;
    }
  }, {
    key: 'getIntl',
    value: function getIntl() {
      var mjAttribute = this.props.mjAttribute;


      var intl = (0, _cloneDeep3.default)(this.constructor.intl);

      mjAttribute('intl').split(';').forEach(function (t) {
        if (t && t.indexOf(':') != -1) {
          t = t.split(':');
          intl[t[0].trim()] = t[1].trim();
        }
      });

      return intl;
    }
  }, {
    key: 'getTotal',
    value: function getTotal() {
      var format = this.format;
      var currency = this.currency;

      var total = this.items.reduce(function (prev, item) {
        var unitPrice = parseFloat((0, _numeral2.default)().unformat(item.getIn(['attributes', 'price'])));
        var quantity = parseInt(item.getIn(['attributes', 'quantity']));

        return prev + unitPrice * quantity;
      }, 0);

      return (0, _numeral2.default)(total).format(format).replace(/([^-\d.,])/g, currency);
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;

      var intl = this.getIntl();
      var total = this.getTotal();

      return _react2.default.createElement(
        _Table2.default,
        this.props,
        _react2.default.createElement(
          'thead',
          null,
          _react2.default.createElement(
            'tr',
            { style: this.styles.thead },
            _react2.default.createElement(
              'th',
              { style: this.styles.th },
              intl['name']
            ),
            _react2.default.createElement(
              'th',
              { style: this.styles.th },
              intl['price']
            ),
            _react2.default.createElement(
              'th',
              { style: this.styles.thQuantity },
              intl['quantity']
            )
          )
        ),
        _react2.default.createElement(
          'tbody',
          null,
          children
        ),
        _react2.default.createElement(
          'tfoot',
          null,
          _react2.default.createElement(
            'tr',
            { style: this.styles.tfoot },
            _react2.default.createElement(
              'th',
              {
                colSpan: '2',
                style: this.styles.th },
              intl['total']
            ),
            _react2.default.createElement(
              'td',
              { style: this.styles.total },
              total
            )
          )
        )
      );
    }
  }]);

  return Invoice;
}(_react.Component), _class2.baseStyles = {
  th: {
    fontWeight: 700,
    padding: '10px 20px',
    textAlign: 'left',
    textTransform: 'uppercase'
  }
}, _class2.intl = {
  name: 'Name',
  price: 'Price',
  quantity: 'Quantity',
  total: 'Total:'
}, _temp)) || _class);
exports.default = Invoice;
//# sourceMappingURL=index.js.map
