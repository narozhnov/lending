'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _uniq2 = require('lodash/uniq');

var _uniq3 = _interopRequireDefault(_uniq2);

var _each2 = require('lodash/each');

var _each3 = _interopRequireDefault(_each2);

var _Error = require('./Error');

var _jsBeautify = require('js-beautify');

var _mjml = require('./helpers/mjml');

var _defaultContainer = require('./configs/defaultContainer');

var _defaultContainer2 = _interopRequireDefault(_defaultContainer);

var _documentParser = require('./documentParser');

var _documentParser2 = _interopRequireDefault(_documentParser);

var _dom = require('./helpers/dom');

var _dom2 = _interopRequireDefault(_dom);

var _getFontsImports = require('./helpers/getFontsImports');

var _getFontsImports2 = _interopRequireDefault(_getFontsImports);

var _MJMLElementsCollection = require('./MJMLElementsCollection');

var _MJMLElementsCollection2 = _interopRequireDefault(_MJMLElementsCollection);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _server = require('react-dom/server');

var _server2 = _interopRequireDefault(_server);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = require('debug')('mjml-engine/mjml2html');

var mjml2html = function mjml2html(content) {
  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  var parsedContent = content;

  if (typeof content == 'string') {
    debug('Start parsing content');
    parsedContent = (0, _documentParser2.default)(content);
    debug('Content parsed.');
  }

  debug('Start rendering');
  var html = render({ mjml: parsedContent, options: options });
  debug('Done rendering');

  return html;
};

var removeCDATA = function removeCDATA(str) {
  return str.replace(/<!--\[CDATA\[([^]*?)\]\]-->/gm, '$1');
};

var insertColumnMediaQuery = function insertColumnMediaQuery($) {
  var mediaQueries = [];

  (0, _each3.default)({ 'mj-column-per': '%', 'mj-column-px': 'px' }, function (unit, className) {
    var columnWidths = [];

    $('[class*="' + className + '"]').each(function () {
      columnWidths.push($(this).data('column-width'));
      $(this).removeAttr('data-column-width');
    });

    (0, _uniq3.default)(columnWidths).forEach(function (width) {
      var mediaQueryClass = className + '-' + width;

      mediaQueries.push('.' + mediaQueryClass + ', * [aria-labelledby="' + mediaQueryClass + '"] { width:' + width + unit + '!important; }');
    });
  });

  if (mediaQueries.length > 0) {
    var mediaQuery = '<style type="text/css">\n  @media only screen and (min-width:480px) {\n    ' + mediaQueries.join('\n') + '\n  }\n</style>\n';

    $('head').append(mediaQuery);
  }

  return $;
};

var fixOutlookLayout = function fixOutlookLayout($) {
  var bodyWidth = $('.mj-body').data('width');

  $('.mj-body').removeAttr('data-width');

  $('.mj-section-outlook-background').each(function () {
    var url = $(this).data('url');
    var width = $(this).data('width');

    $(this).removeAttr('class').removeAttr('data-url').removeAttr('data-width');

    if (!url) {
      return;
    }

    $(this).before('<!--[if gte mso 9]>\n      <v:rect xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" style="width:' + width + 'px;">\n        <v:fill origin="0.5, 0" position="0.5,0" type="tile" src="' + url + '" />\n        <v:textbox style="mso-fit-shape-to-text:true" inset="0,0,0,0">\n      <![endif]-->');

    $(this).after('<!--[if gte mso 9]>\n        </v:textbox>\n      </v:rect>\n      <![endif]-->');
  });

  $('.mj-body-outlook-open').each(function () {
    $(this).replaceWith('<!--[if mso]>\n      <table border="0" cellpadding="0" cellspacing="0" width="' + bodyWidth + '" align="center" style="width:' + bodyWidth + 'px;"><tr><td>\n      <![endif]-->');
  });

  $('.mj-body-outlook-line').each(function () {
    $(this).replaceWith('<!--[if mso]>\n      </td></tr></table>\n      <![endif]-->\n      <!--[if mso]>\n      <table border="0" cellpadding="0" cellspacing="0" width="' + bodyWidth + '" align="center" style="width:' + bodyWidth + 'px;"><tr><td>\n      <![endif]-->');
  });

  $('.mj-body-outlook-close').each(function () {
    $(this).replaceWith('<!--[if mso]>\n      </td></tr></table>\n      <![endif]-->');
  });

  $('.mj-section-outlook-open').each(function () {
    var $columnDiv = $(this).next();

    $(this).replaceWith('<!--[if mso]>\n      <table border="0" cellpadding="0" cellspacing="0"><tr><td style="vertical-align:' + $columnDiv.data('vertical-align') + ';width:' + parseInt($(this).data('width')) + 'px;">\n      <![endif]-->');

    $columnDiv.removeAttr('data-vertical-align');
  });

  $('.mj-section-outlook-line').each(function () {
    var $columnDiv = $(this).next();

    $(this).replaceWith('<!--[if mso]>\n    </td><td style="vertical-align:' + $columnDiv.data('vertical-align') + ';width:' + parseInt($(this).data('width')) + 'px;">\n      <![endif]-->');

    $columnDiv.removeAttr('data-vertical-align');
  });

  $('.mj-section-outlook-close').each(function () {
    $(this).replaceWith('<!--[if mso]>\n      </td></tr></table>\n      <![endif]-->');
  });

  $('.mj-social-outlook-open').each(function () {
    $(this).replaceWith('<!--[if mso]>\n      <table border="0" cellpadding="0" cellspacing="0" align="center"><tr><td>\n      <![endif]-->');
  });

  $('.mj-social-outlook-line').each(function () {
    $(this).replaceWith('<!--[if mso]>\n      </td><td>\n      <![endif]-->');
  });

  $('.mj-social-outlook-close').each(function () {
    $(this).replaceWith('<!--[if mso]>\n      </td></tr></table>\n      <![endif]-->');
  });

  $('.mj-divider-outlook').each(function () {
    var insertNode = '<table align="center" border="0" cellpadding="0" cellspacing="0" style="' + $(this).attr('style') + '" width="' + $(this).data('divider-width') + '"><tr><td>&nbsp;</td></tr></table>';

    $(this).removeAttr('data-divider-width');

    $(this).removeAttr('class').after('<!--[if mso]>' + insertNode + '<![endif]-->');
  });

  return $;
};

var fixLegacyAttrs = function fixLegacyAttrs($) {
  var legacyAttrs = ['align', 'valign', 'bgcolor', 'border', 'background'];

  $('body').css({ background: $('.mj-body').data('background-color') });
  $('.mj-body').removeAttr('data-background-color');

  // https://github.com/facebook/react/issues/140 ...
  // server side workaround to allow custom tags.
  legacyAttrs.forEach(function (attr) {
    var dataAttr = 'data-legacy-' + attr;

    $('[' + dataAttr + ']').each(function () {
      $(this).attr(attr, $(this).attr(dataAttr));
      $(this).removeAttr(dataAttr);
    });
  });

  return $;
};

var clean = function clean($) {
  $('body').each(function () {
    if ($(this).attr('style') === '') {
      $(this).removeAttr('style');
    }
  });

  $('.mj-body').removeAttr('class').each(function () {
    if ($(this).attr('style') === '') {
      $(this).removeAttr('style');
    }
  });

  return $;
};

var render = function render(_ref) {
  var mjml = _ref.mjml;
  var options = _ref.options;

  var content = '';

  if (mjml) {
    debug('Create root React element');
    var rootElemComponent = _react2.default.createElement(_MJMLElementsCollection2.default[mjml.tagName.substr(3)], { mjml: (0, _mjml.parseInstance)(mjml) });

    debug('Render to static markup');
    content = _server2.default.renderToStaticMarkup(rootElemComponent);
  } else {
    throw new _Error.EmptyMJMLError('.render: No MJML to render in options ' + options.toString());
  }

  debug('React rendering done. Continue with special overrides.');
  var $ = _dom2.default.parseHTML((0, _defaultContainer2.default)({ title: options.title, content: content, fonts: (0, _getFontsImports2.default)({ content: content }) }));

  $('.mj-raw').each(function () {
    $(this).replaceWith($(this).html());
  });

  $ = insertColumnMediaQuery($);
  $ = fixLegacyAttrs($);
  $ = fixOutlookLayout($);
  $ = clean($);

  var html = _dom2.default.getHTML($);

  html = removeCDATA(html);

  if (options.beautify && _jsBeautify.html) {
    html = (0, _jsBeautify.html)(html, {
      indent_size: 2,
      wrap_attributes_indent_size: 2
    });
  }

  if (options.minify) {
    var _require = require('html-minifier');

    var minify = _require.minify;


    html = minify(html, {
      collapseWhitespace: true,
      removeEmptyAttributes: true,
      minifyCSS: true
    });
  }

  return html;
};

exports.default = mjml2html;
//# sourceMappingURL=mjml2html.js.map
